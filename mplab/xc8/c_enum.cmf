%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$c_enum.obj
cinit CODE 0 7ADA 7ADA A 1
text0 CODE 0 7D26 7D26 1C2 1
text1 CODE 0 7B8C 7B8C 19A 1
text2 CODE 0 7AD8 7AD8 2 1
text3 CODE 0 7AE4 7AE4 4C 1
text4 CODE 0 7B30 7B30 5C 1
cstackCOMRAM COMRAM 1 1 1 26 1
mediumconst MEDIUMCONST 0 7EE8 7EE8 118 1
$startup.obj
end_init CODE 0 0 0 4 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 60-7FF 1
SFR F60-FFF 1
BANK0 60-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
BANK6 600-6FF 1
BANK7 700-7FF 1
CONST 4-7AD7 1
IDLOC 200000-200007 1
STACK 60-7FF 1
SMALLCONST 800-7AD7 1
CODE 4-7AD7 1
BIGRAM 27-7FF 1
COMRAM 27-5F 1
CONFIG 300000-30000D 1
EEDATA F00000-F000FF 1
MEDIUMCONST 800-7AD7 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$c_enum.obj
7AD8 text2 CODE >7:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c
7AD8 text2 CODE >9:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c
7ADA cinit CODE >482:D:\git\enum_test\mplab\xc8\c_enum.as
7ADA cinit CODE >484:D:\git\enum_test\mplab\xc8\c_enum.as
7ADA cinit CODE >487:D:\git\enum_test\mplab\xc8\c_enum.as
7ADA cinit CODE >493:D:\git\enum_test\mplab\xc8\c_enum.as
7ADA cinit CODE >495:D:\git\enum_test\mplab\xc8\c_enum.as
7ADC cinit CODE >496:D:\git\enum_test\mplab\xc8\c_enum.as
7ADE cinit CODE >497:D:\git\enum_test\mplab\xc8\c_enum.as
7AE0 cinit CODE >498:D:\git\enum_test\mplab\xc8\c_enum.as
7AE4 text3 CODE >8:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7AE4 text3 CODE >13:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7AEC text3 CODE >14:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7AF0 text3 CODE >15:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7AF2 text3 CODE >16:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7AF8 text3 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7AFC text3 CODE >15:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B04 text3 CODE >20:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B10 text3 CODE >21:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B1A text3 CODE >22:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B20 text3 CODE >23:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B26 text3 CODE >24:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B26 text3 CODE >25:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B2E text3 CODE >26:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c
7B30 text4 CODE >8:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B30 text4 CODE >14:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B38 text4 CODE >15:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B40 text4 CODE >16:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B44 text4 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B46 text4 CODE >18:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B4C text4 CODE >19:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B50 text4 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B58 text4 CODE >22:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B5E text4 CODE >23:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B6A text4 CODE >24:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B72 text4 CODE >25:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B76 text4 CODE >27:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B7C text4 CODE >28:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B82 text4 CODE >29:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B82 text4 CODE >30:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B8A text4 CODE >31:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c
7B8C text1 CODE >464:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7B8C text1 CODE >533:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7B94 text1 CODE >536:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7B96 text1 CODE >538:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7B9E text1 CODE >541:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BA4 text1 CODE >542:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BA6 text1 CODE >548:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BAA text1 CODE >635:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BAC text1 CODE >638:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BAE text1 CODE >699:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BB0 text1 CODE >734:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BC8 text1 CODE >740:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BD0 text1 CODE >741:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BD8 text1 CODE >777:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BDA text1 CODE >778:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7BF0 text1 CODE >777:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C04 text1 CODE >813:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C06 text1 CODE >822:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C08 text1 CODE >635:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C36 text1 CODE >1259:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C4E text1 CODE >1261:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C52 text1 CODE >1262:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C56 text1 CODE >1263:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C60 text1 CODE >1305:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C70 text1 CODE >1306:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C92 text1 CODE >1307:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C94 text1 CODE >1305:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7C98 text1 CODE >1438:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7CA4 text1 CODE >1439:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7CAC text1 CODE >1472:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7CB0 text1 CODE >1474:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7CB2 text1 CODE >1489:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7CF4 text1 CODE >1524:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7CFC text1 CODE >1474:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7D08 text1 CODE >536:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7D24 text1 CODE >1541:C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c
7D26 text0 CODE >16:D:\git\enum_test\mplab\xc8\c_enum_test.c
7D26 text0 CODE >21:D:\git\enum_test\mplab\xc8\c_enum_test.c
7D3A text0 CODE >22:D:\git\enum_test\mplab\xc8\c_enum_test.c
7D4E text0 CODE >24:D:\git\enum_test\mplab\xc8\c_enum_test.c
7D52 text0 CODE >25:D:\git\enum_test\mplab\xc8\c_enum_test.c
7D56 text0 CODE >26:D:\git\enum_test\mplab\xc8\c_enum_test.c
7D68 text0 CODE >27:D:\git\enum_test\mplab\xc8\c_enum_test.c
7D7A text0 CODE >28:D:\git\enum_test\mplab\xc8\c_enum_test.c
7DA8 text0 CODE >29:D:\git\enum_test\mplab\xc8\c_enum_test.c
7DD6 text0 CODE >30:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E04 text0 CODE >31:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E30 text0 CODE >32:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E5E text0 CODE >33:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E62 text0 CODE >34:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E66 text0 CODE >35:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E6C text0 CODE >36:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E72 text0 CODE >37:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E78 text0 CODE >38:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E80 text0 CODE >39:D:\git\enum_test\mplab\xc8\c_enum_test.c
7E94 text0 CODE >40:D:\git\enum_test\mplab\xc8\c_enum_test.c
7EA8 text0 CODE >41:D:\git\enum_test\mplab\xc8\c_enum_test.c
7EBC text0 CODE >42:D:\git\enum_test\mplab\xc8\c_enum_test.c
7ED0 text0 CODE >43:D:\git\enum_test\mplab\xc8\c_enum_test.c
7EE4 text0 CODE >46:D:\git\enum_test\mplab\xc8\c_enum_test.c
$startup.obj
0 text CODE >61:D:\git\enum_test\mplab\xc8\startup.as
0 text CODE >62:D:\git\enum_test\mplab\xc8\startup.as
0 text CODE >63:D:\git\enum_test\mplab\xc8\startup.as
0 text CODE >65:D:\git\enum_test\mplab\xc8\startup.as
0 reset_vec CODE >101:D:\git\enum_test\mplab\xc8\startup.as
0 init CODE >109:D:\git\enum_test\mplab\xc8\startup.as
0 end_init CODE >125:D:\git\enum_test\mplab\xc8\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___lwmod@counter C 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Lmediumconst 7EE8 0 MEDIUMCONST 0 mediumconst c_enum.obj
__Hspace_0 8000 0 ABS 0 - c_enum.obj
__Hspace_1 27 0 ABS 0 - c_enum.obj
__Hspace_2 0 0 ABS 0 - c_enum.obj
__Hibigdata 0 0 CODE 0 ibigdata c_enum.obj
__mediumconst 7EE8 0 MEDIUMCONST 0 mediumconst startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data c_enum.obj
main@A 26 0 COMRAM 1 cstackCOMRAM c_enum.obj
main@B 25 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Lsmallconst 0 0 SMALLCONST 0 smallconst c_enum.obj
___sp 0 0 STACK 2 stack startup.obj
_main 7D26 0 CODE 0 text0 c_enum.obj
start 0 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - c_enum.obj
__size_of___lwdiv 0 0 ABS 0 - c_enum.obj
__size_of___lwmod 0 0 ABS 0 - c_enum.obj
__Hpowerup 0 0 CODE 0 powerup c_enum.obj
printf@c 1A 0 COMRAM 1 cstackCOMRAM c_enum.obj
printf@f D 0 COMRAM 1 cstackCOMRAM c_enum.obj
__accesstop 60 0 ABS 0 - startup.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM c_enum.obj
__Hifardata 0 0 CODE 0 ifardata c_enum.obj
__Hclrtext 0 0 ABS 0 clrtext c_enum.obj
printf@flag 12 0 COMRAM 1 cstackCOMRAM c_enum.obj
printf@prec 13 0 COMRAM 1 cstackCOMRAM c_enum.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__Hintcode_body 0 0 ABS 0 intcode_body c_enum.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs c_enum.obj
__Hmediumconst 8000 0 MEDIUMCONST 0 mediumconst c_enum.obj
?_printf D 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Hintcodelo 0 0 CODE 0 intcodelo c_enum.obj
___lwmod@divisor A 0 COMRAM 1 cstackCOMRAM c_enum.obj
__end_of___lwdiv 7B8C 0 CODE 0 text4 c_enum.obj
__end_of___lwmod 7B30 0 CODE 0 text3 c_enum.obj
_dpowers 7EE9 0 MEDIUMCONST 0 mediumconst c_enum.obj
___lwdiv@quotient 5 0 COMRAM 1 cstackCOMRAM c_enum.obj
__size_of_putch 0 0 ABS 0 - c_enum.obj
___lwmod@dividend 8 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Lintcodelo 0 0 CODE 0 intcodelo c_enum.obj
start_initialization 7ADA 0 CODE 0 cinit c_enum.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM c_enum.obj
___rparam_used 1 0 ABS 0 - c_enum.obj
__end_of_printf 7D26 0 CODE 0 text1 c_enum.obj
__Hbank0 0 0 ABS 0 bank0 c_enum.obj
__Hbank1 0 0 ABS 0 bank1 c_enum.obj
__Hbank2 0 0 ABS 0 bank2 c_enum.obj
__Hbank3 0 0 ABS 0 bank3 c_enum.obj
__Hbank4 0 0 ABS 0 bank4 c_enum.obj
__Hbank5 0 0 ABS 0 bank5 c_enum.obj
__Hbank6 0 0 ABS 0 bank6 c_enum.obj
__Hbank7 0 0 ABS 0 bank7 c_enum.obj
__Hcinit 0 0 ABS 0 cinit c_enum.obj
__Hconst 0 0 CODE 0 const c_enum.obj
__Hidata 0 0 CODE 0 idata c_enum.obj
__Hidloc 0 0 IDLOC 0 idloc c_enum.obj
__Hnvbit 0 0 COMRAM 1 nvbit c_enum.obj
__Hparam 0 0 COMRAM 1 rparam c_enum.obj
__Hrdata 0 0 COMRAM 1 rdata c_enum.obj
__Hstack 0 0 STACK 2 stack c_enum.obj
__Htext0 0 0 ABS 0 text0 c_enum.obj
__Htext1 0 0 ABS 0 text1 c_enum.obj
__Htext2 0 0 ABS 0 text2 c_enum.obj
__Htext3 0 0 ABS 0 text3 c_enum.obj
__Htext4 0 0 ABS 0 text4 c_enum.obj
___lwdiv@counter 7 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Hbigbss 0 0 BIGRAM 1 bigbss c_enum.obj
__Hbigram 0 0 ABS 0 bigram c_enum.obj
__smallconst 0 0 SMALLCONST 0 smallconst startup.obj
__Hcomram 0 0 ABS 0 comram c_enum.obj
__Hconfig 0 0 CONFIG 0 config c_enum.obj
__Lbank0 0 0 ABS 0 bank0 c_enum.obj
__Lbank1 0 0 ABS 0 bank1 c_enum.obj
__Lbank2 0 0 ABS 0 bank2 c_enum.obj
__Lbank3 0 0 ABS 0 bank3 c_enum.obj
__Lbank4 0 0 ABS 0 bank4 c_enum.obj
__Lbank5 0 0 ABS 0 bank5 c_enum.obj
__Lbank6 0 0 ABS 0 bank6 c_enum.obj
__Lbank7 0 0 ABS 0 bank7 c_enum.obj
__Lcinit 0 0 ABS 0 cinit c_enum.obj
__Lconst 0 0 CODE 0 const c_enum.obj
__Lidata 0 0 CODE 0 idata c_enum.obj
__Lidloc 0 0 IDLOC 0 idloc c_enum.obj
__Lnvbit 0 0 COMRAM 1 nvbit c_enum.obj
__Lparam 0 0 COMRAM 1 rparam c_enum.obj
__Lrdata 0 0 COMRAM 1 rdata c_enum.obj
__Lstack 0 0 STACK 2 stack c_enum.obj
__Ltext0 0 0 ABS 0 text0 c_enum.obj
__Ltext1 0 0 ABS 0 text1 c_enum.obj
__Ltext2 0 0 ABS 0 text2 c_enum.obj
__Ltext3 0 0 ABS 0 text3 c_enum.obj
__Ltext4 0 0 ABS 0 text4 c_enum.obj
__Hfarbss 0 0 FARRAM 0 farbss c_enum.obj
__Lintcode_body 0 0 ABS 0 intcode_body c_enum.obj
__Habs1 0 0 ABS 0 abs1 c_enum.obj
__Hdata 0 0 ABS 0 data c_enum.obj
__Hinit 0 0 CODE 0 init c_enum.obj
__Hrbit 0 0 COMRAM 1 rbit c_enum.obj
__Hrbss 0 0 COMRAM 1 rbss c_enum.obj
__Htemp 0 0 COMRAM 1 temp c_enum.obj
__Htext 0 0 ABS 0 text c_enum.obj
__Labs1 0 0 ABS 0 abs1 c_enum.obj
__Ldata 0 0 ABS 0 data c_enum.obj
__Linit 0 0 CODE 0 init c_enum.obj
__Lrbit 0 0 COMRAM 1 rbit c_enum.obj
__Lrbss 0 0 COMRAM 1 rbss c_enum.obj
__Ltemp 0 0 COMRAM 1 temp c_enum.obj
__Ltext 0 0 ABS 0 text c_enum.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM c_enum.obj
__Hintret 0 0 ABS 0 intret c_enum.obj
__Hirdata 0 0 CODE 0 irdata c_enum.obj
__S0 8000 0 ABS 0 - c_enum.obj
__S1 27 0 ABS 0 - c_enum.obj
__S2 0 0 ABS 0 - c_enum.obj
__Lbigdata 0 0 BIGRAM 1 bigdata c_enum.obj
__Hnvrram 0 0 COMRAM 1 nvrram c_enum.obj
__Lintentry 0 0 ABS 0 intentry c_enum.obj
__Hramtop 800 0 RAM 0 ramtop c_enum.obj
__Hrparam 0 0 COMRAM 1 rparam c_enum.obj
__activetblptr 2 0 ABS 0 - c_enum.obj
__Hstruct 0 0 COMRAM 1 struct c_enum.obj
___lwdiv 7B30 0 CODE 0 text4 c_enum.obj
___lwmod 7AE4 0 CODE 0 text3 c_enum.obj
__Lbigbss 0 0 BIGRAM 1 bigbss c_enum.obj
__Lbigram 0 0 ABS 0 bigram c_enum.obj
__Lcomram 0 0 ABS 0 comram c_enum.obj
__Lconfig 0 0 CONFIG 0 config c_enum.obj
_printf 7B8C 0 CODE 0 text1 c_enum.obj
__Lfarbss 0 0 FARRAM 0 farbss c_enum.obj
___lwdiv@divisor 3 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Lfardata 0 0 FARRAM 0 fardata c_enum.obj
stackhi 7FF 0 ABS 0 - startup.obj
stacklo 60 0 ABS 0 - startup.obj
__Lintcode 0 0 CODE 0 intcode c_enum.obj
__Lintret 0 0 ABS 0 intret c_enum.obj
__Lirdata 0 0 CODE 0 irdata c_enum.obj
__Lspace_0 0 0 ABS 0 - c_enum.obj
__Lspace_1 0 0 ABS 0 - c_enum.obj
__Lspace_2 0 0 ABS 0 - c_enum.obj
__Lend_init 0 0 CODE 0 end_init c_enum.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM c_enum.obj
printf@ap 14 0 COMRAM 1 cstackCOMRAM c_enum.obj
printf@cp 16 0 COMRAM 1 cstackCOMRAM c_enum.obj
end_of_initialization 7ADA 0 CODE 0 cinit c_enum.obj
__Lnvrram 0 0 COMRAM 1 nvrram c_enum.obj
__Hintentry 0 0 ABS 0 intentry c_enum.obj
__size_of_printf 0 0 ABS 0 - c_enum.obj
___lwdiv@dividend 1 0 COMRAM 1 cstackCOMRAM c_enum.obj
?___lwdiv 1 0 COMRAM 1 cstackCOMRAM c_enum.obj
?___lwmod 8 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Hreset_vec 0 0 CODE 0 reset_vec c_enum.obj
__Lramtop 800 0 RAM 0 ramtop c_enum.obj
__Lrparam 0 0 COMRAM 1 rparam c_enum.obj
__pcinit 7ADA 0 CODE 0 cinit c_enum.obj
__ptext0 7D26 0 CODE 0 text0 c_enum.obj
__ptext1 7B8C 0 CODE 0 text1 c_enum.obj
__ptext2 7AD8 0 CODE 0 text2 c_enum.obj
__ptext3 7AE4 0 CODE 0 text3 c_enum.obj
__ptext4 7B30 0 CODE 0 text4 c_enum.obj
__Lstruct 0 0 COMRAM 1 struct c_enum.obj
__ramtop 800 0 RAM 0 ramtop startup.obj
__Lpowerup 0 0 CODE 0 powerup c_enum.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data c_enum.obj
__Lreset_vec 0 0 CODE 0 reset_vec c_enum.obj
___param_bank 10 0 ABS 0 - c_enum.obj
__Hbigdata 0 0 BIGRAM 1 bigdata c_enum.obj
__end_of__initialization 7ADA 0 CODE 0 cinit c_enum.obj
_main$43 1B 0 COMRAM 1 cstackCOMRAM c_enum.obj
_main$48 1D 0 COMRAM 1 cstackCOMRAM c_enum.obj
_main$53 1F 0 COMRAM 1 cstackCOMRAM c_enum.obj
_main$58 21 0 COMRAM 1 cstackCOMRAM c_enum.obj
_main$63 23 0 COMRAM 1 cstackCOMRAM c_enum.obj
__Libigdata 0 0 CODE 0 ibigdata c_enum.obj
__Lclrtext 0 0 ABS 0 clrtext c_enum.obj
__pcstackCOMRAM 1 0 COMRAM 1 cstackCOMRAM c_enum.obj
__pmediumconst 7EE8 0 MEDIUMCONST 0 mediumconst c_enum.obj
__Hend_init 4 0 CODE 0 end_init c_enum.obj
__end_of_main 7EE8 0 CODE 0 text0 c_enum.obj
printf@val 18 0 COMRAM 1 cstackCOMRAM c_enum.obj
__end_of_dpowers 7EF3 0 MEDIUMCONST 0 mediumconst c_enum.obj
__end_of_putch 7ADA 0 CODE 0 text2 c_enum.obj
__HRAM 0 0 ABS 0 - c_enum.obj
__Hbss 0 0 RAM 1 bss c_enum.obj
__Hram 0 0 ABS 0 ram c_enum.obj
__Hsfr 0 0 ABS 0 sfr c_enum.obj
__LRAM 1 0 ABS 0 - c_enum.obj
__Lbss 0 0 RAM 1 bss c_enum.obj
__Lram 0 0 ABS 0 ram c_enum.obj
__Lsfr 0 0 ABS 0 sfr c_enum.obj
_putch 7AD8 0 CODE 0 text2 c_enum.obj
__initialization 7ADA 0 CODE 0 cinit c_enum.obj
__Hfardata 0 0 FARRAM 0 fardata c_enum.obj
__Hsmallconst 0 0 SMALLCONST 0 smallconst c_enum.obj
__Lifardata 0 0 CODE 0 ifardata c_enum.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs c_enum.obj
__Hintcode 0 0 CODE 0 intcode c_enum.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7ADA 7ADA A 1
text0 0 7D26 7D26 1C2 1
text1 0 7B8C 7B8C 19A 1
text2 0 7AD8 7AD8 2 1
text3 0 7AE4 7AE4 4C 1
text4 0 7B30 7B30 5C 1
cstackCOMRAM 1 1 1 26 1
reset_vec 0 0 0 4 1
mediumconst 0 7EE8 7EE8 118 1
